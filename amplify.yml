version: 1

frontend:
  phases:
    preBuild:
      commands:
        # --- Node 20 ---------------------------------------------------------
        - echo "Checking Node..."
        - 'if command -v node >/dev/null 2>&1; then echo "Node:" $(node -v); else echo "Node not found"; fi'
        - 'if [ -f "$HOME/.nvm/nvm.sh" ]; then . "$HOME/.nvm/nvm.sh"; fi'
        - 'if command -v nvm >/dev/null 2>&1; then nvm install 20 && nvm use 20; fi'
        - echo "Using Node=$(node -v) npm=$(npm -v)"

        # --- Install dependencies (clean) -----------------------------------
        - test -f package-lock.json || (echo "ERROR: package-lock.json missing" && exit 1)
        - rm -rf node_modules .next .next/cache
        - npm ci --no-audit --no-fund

        # --- Optional sanity checks -----------------------------------------
        - node -e "try{require('tailwindcss');console.log('tailwind ok')}catch(e){console.log('tailwind not installed (ok if not used)')}"
        - 'test -f tsconfig.json || (echo "ERROR: tsconfig.json not found at repo root" && exit 1)'
        - >
          node -e "const f=require('./tsconfig.json');
          const ok=f?.compilerOptions?.paths?.['@/*'];
          if(!ok){console.error('ERROR: Alias @ not configured in tsconfig.json');process.exit(1)}
          console.log('Alias @ ->', ok)"

    build:
      commands:
        # --- Do not leak secrets to client! Only write NEXT_PUBLIC_* to .env.production
        - export NEXT_TELEMETRY_DISABLED=1
        - export NODE_OPTIONS="--max_old_space_size=4096"

        # Require public env for client bundle
        - test -n "$NEXT_PUBLIC_API_BASE_URL" || (echo "ERROR: NEXT_PUBLIC_API_BASE_URL is missing in Amplify Environment variables" && exit 1)

        # Write only NEXT_PUBLIC_* vars to .env.production
        - printf "NEXT_PUBLIC_API_BASE_URL=%s\n" "$NEXT_PUBLIC_API_BASE_URL" > .env.production
        - 'test -n "$NEXT_PUBLIC_AWS_REGION" && printf "NEXT_PUBLIC_AWS_REGION=%s\n" "$NEXT_PUBLIC_AWS_REGION" >> .env.production || true'
        - echo ".env.production:"
        - cat .env.production

        # Server-side secrets must exist at runtime (do NOT print values)
        - >
          for k in NEXTAUTH_URL NEXTAUTH_SECRET COGNITO_CLIENT_ID COGNITO_CLIENT_SECRET COGNITO_ISSUER BACKEND_BASE;
          do
            if [ -z "${!k}" ]; then echo "ERROR: Missing server env: $k"; exit 1; else echo "OK   : $k"; fi;
          done

        # Build Next.js
        - npm run build

  artifacts:
    baseDirectory: .next
    files:
      - "**/*"

  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
